# GH Sherpa Config ------------------------------------------------------------#
#
# This is the default configuration file for GH Sherpa. These values
# will be set if no other configuration override those values. You can override
# the values by setting them in your `$HOME/.config/sherpa/config.yml` file.
#-----------------------------------------------------------------------------#

# Jira configuration ---------------------------------------------------------#
jira:
  # Jira authentication configuration
  auth:
    # The URL to connect to your Jira instance.
    host:
    # This token will be used to authenticate to Jira.
    # You can generate a PAT in your Jira instance if you didn't already
    # have one generated by GH Sherpa.
    token:
    # Enable this setting to skip TLS verification. 
    # This is useful when you are using self-signed certificates
    # or when you are authenticating to a non-HTTPS Jira instance.
    # WARNING: It is not recommended to enable this option unless 
    # you are in a trusted network.
    skip_tls_verify: false
  # You can find the issue types in your Jira instance by navigating to
  # `https://{your-jira-domain}/jira/rest/api/2/issuetype`. More info in
  #  https://developer.atlassian.com/cloud/jira/platform/rest/v2/api-group-issue-types/#api-group-issue-types
  issue_types:
    bugfix: ["1"]
    feature: ["3", "5"]
    improvement: ["4"]
    # There are other issue types with no value set, already deactivated.
    # dependency: []
    # deprecation: []
    # documentation: []
    # hotfix: []
    # internal: []
    # refactoring: []
    # release: []
    # removal: []
    # revert: []
    # security: []

# Github configuration -------------------------------------------------------#
github:
  # Github issue labels configuration
  # Here you can configure the issue labels mapping between Github issues and
  # GH Sherpa issue types.
  issue_labels:
    bugfix: ["kind/bug"]
    documentation: ["kind/documentation"]
    feature: ["kind/feature"]
    improvement: ["kind/improvement"]
    refactoring: ["kind/refactoring"]
    # There are other issue types with no value set, already deactivated.
    # dependency: []
    # deprecation: []
    # hotfix: []
    # internal: []
    # release: []
    # removal: []
    # revert: []
    # security: []

# Branches configuration -----------------------------------------------------#
branches:
  # Branch prefixes configuration
  # Here you can set the prefixes that will be used when creating the branches
  # for the issues. By default it will use the issue type as prefix.
  prefixes:
    # We provide some examples below to help you configure your prefixes, select one
    # issue type and map it to a custom prefix.
    # Example: map `bugfix` type to a branch prefix `myfix/xxx`:
    # bugfix: myfix
    # Example: map `feature` type to a branch prefix `feat/xxx`:
    # feature: feat
